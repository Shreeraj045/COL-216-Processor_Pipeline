00A00093 addi x1, x0, 10      # x1 = 10
01400113 addi x2, x0, 20      # x2 = 20
002081B3 add x3, x1, x2       # x3 = x1 + x2 = 30
00218663 beq x3, x2, 12       # Branch if x3 == x2 (shouldn't branch)
FF618213 addi x4, x3, -10     # x4 = x3 - 10 = 20
00220663 beq x4, x2, 12       # Branch if x4 == x2 (should branch)
00520293 addi x5, x4, 5       # x5 = x4 + 5 = 25 (skipped if branch taken)
00000013 addi x0, x0, 0       # NOP
10002223 sw x3, 256(x0)       # Store x3 (30) to memory[256]
10002403 lw x8, 256(x0)       # Load from memory[256] to x8 (should be 30)
00140493 addi x9, x8, 1       # x9 = x8 + 1 = 31
